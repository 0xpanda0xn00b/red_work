#
# Copyright (c) 2019-2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation *****
#

name: Empty workspace smoke test
on:
  workflow_run:
    workflows: ["Build of UBI 8 based Developer Images"]
    types:
      - completed
    branches: [create-smoke-test-with-empty-ws]

env:
   USERSTORY: CloneGitRepoAPI
   TS_API_TEST_KUBERNETES_COMMAND_LINE_TOOL: kubectl
   DEPLOYMENT_TIMEOUT: 90s

jobs:
  smoke-api-tests-on-minikube:
    runs-on: ubuntu-22.04
    steps:

    - name: test artifacts
      uses: actions/github-script@v6
      with:
        script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "uniq_tag_image"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/uniq_tag_image.zip`, Buffer.from(download.data));
    - name: read artifact
      run: |
        unzip uniq_tag_image.zip
        export TS_API_TEST_UDI_IMAGE=$(cat uniq_tag_image)
        echo '...........TS_API_TEST_UDI_IMAGE..........:'$TS_API_TEST_UDI_IMAGE

    - name: Checkout WTO
      uses: actions/checkout@master
      with:
        repository: devfile/devworkspace-operator
        path: devworkspace-operator

    - name: Checkout tests codebase
      uses: actions/checkout@master
      with:
        repository: eclipse/che
        path: che
    - name: Install NodeJs
      uses: actions/setup-node@v3

    - name: Start minikube cluster
      id: run-minikube
      uses: che-incubator/setup-minikube-action@next
      with:
        minikube-version: v1.23.2

    - name: Setup cert manager
      run: |
        cd devworkspace-operator
        make install_cert_manager
        kubectl wait deployment -n cert-manager cert-manager --for condition=Available=True --timeout=$DEPLOYMENT_TIMEOUT
        kubectl wait deployment -n cert-manager cert-manager-cainjector --for condition=Available=True --timeout=$DEPLOYMENT_TIMEOUT
        kubectl wait deployment -n cert-manager cert-manager-webhook --for condition=Available=True --timeout=$DEPLOYMENT_TIMEOUT

    - name: Setup DWO
      run: |
        cd devworkspace-operator
        make install

    - name: Pre-pull image on minikube
      run: |
        export TS_API_TEST_UDI_IMAGE=$(cat uniq_tag_image)
        minikube ssh "docker pull ${TS_API_TEST_UDI_IMAGE}"

    - name: Run Empty workspace smoke test
      run: |
        export TS_API_TEST_UDI_IMAGE=$(cat uniq_tag_image)
        cd che/tests/e2e
        npm i
        npm run driver-less-test




